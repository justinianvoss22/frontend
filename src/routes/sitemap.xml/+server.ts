import type { ApiChain } from '$lib/helpers/chain.js';
import { fetchPublicApi } from '$lib/helpers/public-api.js';

/**
 * Generate a sitemap for static pages and other sitemaps
 */
export async function GET({ url, fetch }) {
	let { protocol, host } = url;

	// TODO: configure adapter-node to use correct Cloudflare X-Forwarded- headers
	// https://github.com/sveltejs/kit/tree/master/packages/adapter-node#origin-protocol_header-and-host_header
	if (!host || host === 'undefined') {
		host = 'tradingstrategy.ai';
		protocol = 'https:';
	}

	const baseUrl = `${protocol}//${host}`;

	const chains: ApiChain[] = await fetchPublicApi(fetch, 'chains');

	const headers = {
		'content-type': 'application/xml',
		'cache-control': 'public, max-age=600'
	};

	return new Response(render(baseUrl, chains), { headers });
}

// This sitemap is manually maintained and page paths included here one by one
const staticPages = [
	'',
	'about',
	'api/explorer/',
	'blog',
	'community',
	'docs',
	'glossary',
	'newsletter',
	'search',
	'trading-view',
	'trading-view/api',
	'trading-view/backtesting',
	'trading-view/blockchains',
	'trading-view/exchanges',
	'trading-view/lending-reserves',
	'trading-view/top-list',
	'trading-view/top-list/daily-up',
	'trading-view/top-list/daily-down',
	'trading-view/trading-pairs',

	// refer to other sitemaps
	'api/sitemap/exchanges/sitemap.xml',
	'blog/rss.xml',
	'docs/sitemap-docs.xml'
];

// See https://en.wikipedia.org/wiki/Sitemaps
function render(baseUrl: string, chains: ApiChain[]) {
	return `<?xml version="1.0" encoding="utf-8"?>
		<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
		${renderFragments(baseUrl, chains).join('')}
		</urlset>`;
}

// Priority 0.8 = static page indexing preferred over token data
function renderFragments(baseUrl: string, chains: ApiChain[]) {
	return [...staticPages, ...chainPages(chains), ...tradingPairSitemaps()].map((path) => {
		const fullUrl = `${baseUrl}/${path}`;
		return `<url><loc>${fullUrl}</loc><priority>0.8</priority></url>`;
	});
}

function chainPages(chains: ApiChain[]) {
	// prettier-ignore
	return chains.flatMap(({ chain_slug }) => [
		`trading-view/${chain_slug}`,
		`trading-view/${chain_slug}/tokens`
	]);
}

// trading pair sitemaps generated by backend
function tradingPairSitemaps() {
	return [0, 1, 2, 3, 4].map((page) => `api/sitemap/pairs/paged/${page}.xml`);
}
